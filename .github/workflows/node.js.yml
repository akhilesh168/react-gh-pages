# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: install ci cd
        run: npm ci
      - name: Restore node_modules from cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: npm run build --if-present
      - name: Run test
        run: npm test
      - name: run npm build dist command to copy files from build folder
        run: npm run build-dist
        working-directory: deploy
      - name: Login to GitHub private NPM registry
        env:
          CI_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          npm install -g npm-cli-login
          npm-cli-login -u "akhilesh168" -p "${CI_ACCESS_TOKEN}" -e "akhilesh.sharma168@gmail.com" -r "https://npm.pkg.github.com" -s "@akhilesh168"
      - name: Install Github Calls Using Express Package
        run: |
          npm install @akhilesh168/githubcallsusingexpress
      - name: RUN the above package
        env:
          USER_TOKEN_SECRET: ${{ secrets.USER_TOKEN }}
          APP_TOKEN_SECRET: ${{ secrets.APP_TOKEN }}
        run: |
          npm run deployqb OWNER=akhilesh168 REPO_NAME=react-gh-pages APP_TOKEN="$APP_TOKEN_SECRET" USER_TOKEN="$USER_TOKEN_SECRET"
